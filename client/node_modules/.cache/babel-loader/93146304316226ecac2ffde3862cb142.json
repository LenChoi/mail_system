{"ast":null,"code":"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport QrCode from \"react.qrcode.generator\";\nexport default class Popout extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      externalWindow: null,\n      containerElement: null\n    };\n  } // When we create this component, open a new window\n\n\n  componentDidMount() {\n    const features = \"width=800, height=500, left=300, top=200\";\n    const externalWindow = window.open(\"\", \"\", features);\n    let containerElement = null;\n\n    if (externalWindow) {\n      containerElement = externalWindow.document.createElement(\"div\");\n      externalWindow.document.body.appendChild(containerElement);\n      externalWindow.document.title = \"QR코드\"; // Make sure the window closes when the component unloads\n\n      externalWindow.addEventListener(\"beforeunload\", () => {\n        this.props.closeWindow();\n      });\n    }\n\n    this.setState({\n      externalWindow: externalWindow,\n      containerElement: containerElement\n    });\n  } // Make sure the window closes when the component unmounts\n\n\n  componentWillUnmount() {\n    if (this.state.externalWindow) {\n      this.state.externalWindow.close();\n    }\n  }\n\n  render() {\n    if (!this.state.containerElement) {\n      return null;\n    } // Render this component's children into the root element of the popout window\n\n\n    return ReactDOM.createPortal(this.props.children, this.state.containerElement);\n  }\n\n}","map":{"version":3,"sources":["/home/home/github/mail_system/client/src/components/qrCode.js"],"names":["React","ReactDOM","QrCode","Popout","Component","constructor","props","state","externalWindow","containerElement","componentDidMount","features","window","open","document","createElement","body","appendChild","title","addEventListener","closeWindow","setState","componentWillUnmount","close","render","createPortal","children"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AAOA,eAAe,MAAMC,MAAN,SAAqBH,KAAK,CAACI,SAA3B,CAAmD;AAChEC,EAAAA,WAAW,CAACC,KAAD,EAAe;AACxB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,cAAc,EAAE,IADL;AAEXC,MAAAA,gBAAgB,EAAE;AAFP,KAAb;AAID,GAP+D,CAShE;;;AACAC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,QAAQ,GAAG,0CAAjB;AACA,UAAMH,cAAc,GAAGI,MAAM,CAACC,IAAP,CAAY,EAAZ,EAAgB,EAAhB,EAAoBF,QAApB,CAAvB;AAEA,QAAIF,gBAAgB,GAAG,IAAvB;;AACA,QAAID,cAAJ,EAAoB;AAClBC,MAAAA,gBAAgB,GAAGD,cAAc,CAACM,QAAf,CAAwBC,aAAxB,CAAsC,KAAtC,CAAnB;AACAP,MAAAA,cAAc,CAACM,QAAf,CAAwBE,IAAxB,CAA6BC,WAA7B,CAAyCR,gBAAzC;AAEAD,MAAAA,cAAc,CAACM,QAAf,CAAwBI,KAAxB,GAAgC,MAAhC,CAJkB,CAMlB;;AACAV,MAAAA,cAAc,CAACW,gBAAf,CAAgC,cAAhC,EAAgD,MAAM;AACpD,aAAKb,KAAL,CAAWc,WAAX;AACD,OAFD;AAGD;;AAED,SAAKC,QAAL,CAAc;AACZb,MAAAA,cAAc,EAAEA,cADJ;AAEZC,MAAAA,gBAAgB,EAAEA;AAFN,KAAd;AAID,GA/B+D,CAiChE;;;AACAa,EAAAA,oBAAoB,GAAG;AACrB,QAAI,KAAKf,KAAL,CAAWC,cAAf,EAA+B;AAC7B,WAAKD,KAAL,CAAWC,cAAX,CAA0Be,KAA1B;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAI,CAAC,KAAKjB,KAAL,CAAWE,gBAAhB,EAAkC;AAChC,aAAO,IAAP;AACD,KAHM,CAKP;;;AACA,WAAOR,QAAQ,CAACwB,YAAT,CACL,KAAKnB,KAAL,CAAWoB,QADN,EAEL,KAAKnB,KAAL,CAAWE,gBAFN,CAAP;AAID;;AAlD+D","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport QrCode from \"react.qrcode.generator\";\n\ninterface State {\n  externalWindow: Window | null; // The popout window\n  containerElement: HTMLElement | null; // The root element of the popout window\n}\n\nexport default class Popout extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      externalWindow: null,\n      containerElement: null\n    };\n  }\n\n  // When we create this component, open a new window\n  componentDidMount() {\n    const features = \"width=800, height=500, left=300, top=200\";\n    const externalWindow = window.open(\"\", \"\", features);\n\n    let containerElement = null;\n    if (externalWindow) {\n      containerElement = externalWindow.document.createElement(\"div\");\n      externalWindow.document.body.appendChild(containerElement);\n\n      externalWindow.document.title = \"QR코드\";\n\n      // Make sure the window closes when the component unloads\n      externalWindow.addEventListener(\"beforeunload\", () => {\n        this.props.closeWindow();\n      });\n    }\n\n    this.setState({\n      externalWindow: externalWindow,\n      containerElement: containerElement\n    });\n  }\n\n  // Make sure the window closes when the component unmounts\n  componentWillUnmount() {\n    if (this.state.externalWindow) {\n      this.state.externalWindow.close();\n    }\n  }\n\n  render() {\n    if (!this.state.containerElement) {\n      return null;\n    }\n\n    // Render this component's children into the root element of the popout window\n    return ReactDOM.createPortal(\n      this.props.children,\n      this.state.containerElement\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}